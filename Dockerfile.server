FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:9.0 AS client-build-env

# Install Node.js - see https://nodejs.org/en/download and https://stackoverflow.com/a/57546198/1293659
ENV NODE_VERSION=22.12.0
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
ENV NVM_DIR=/root/.nvm
RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
ENV PATH="$NVM_DIR/versions/node/v${NODE_VERSION}/bin/:${PATH}"
RUN node --version
RUN npm --version

WORKDIR /app

COPY ./.config ./.config
RUN dotnet tool restore

# Copy fsproj and restore as distinct layers
COPY ./src/client/src/*.fsproj ./client/src/
RUN dotnet restore ./client/src/

# Copy package.json and restore as distinct layers
COPY ./src/client/package.json ./src/client/package-lock.json ./client/
RUN npm ci install --prefix ./client

# Copy everything else and build
COPY ./src/client ./client
COPY ./src/shared ./shared

WORKDIR /app/client
RUN npm run build

###

FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:9.0 AS server-build-env

WORKDIR /app

# Copy fsproj and restore as distinct layers
COPY ./src/server/*.fsproj ./server/
RUN dotnet restore ./server

# Copy everything else and build
COPY ./src/server ./server
COPY ./src/shared ./shared
RUN dotnet publish ./server -c Release -o out

###

# Build runtime image
FROM mcr.microsoft.com/dotnet/aspnet:9.0
WORKDIR /app
COPY --from=server-build-env /app/out .
COPY --from=client-build-env /app/client/dist ./wwwroot
ENTRYPOINT ["dotnet", "MusiOrder.Server.App.dll"]
